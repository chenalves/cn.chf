<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">
	
	<!-- 
		向容器中添加一个对象 !
		class属性:指定要添加的对象的 类全称(包名+类名),必须传递的属性
		id属性:(不允许使用特殊字符)配置到容器中的对象的key , 我们在代码中获取到容器后 , 可以通过key获取这个创建的对象
			-	id的命名规范：　以类名命名，　首字母小写
		name属性:配置到容器中的对象的key, 我们在代码中获取到容器后 , 可以通过key获取这个创建的对象(早期)
	<bean id="person" class="cn.chf.bean.Person"></bean>-->
	
	<!-- 
		通过静态工厂, 将一个bean对象配置到容器中
		1.	class属性: 工厂类全称(包名加类名)
		2.	factory-method属性:工厂方法名称
		3.	id属性: (不允许使用特殊字符)配置到容器中的对象的key , 我们在代码中获取到容器后 , 可以通过key获取这个创建的对象
	 
	 <bean id="person" factory-method="getPerson" class="cn.xdl.bean.PersonStaticFactory"></bean>
	
	
		通过实例工厂, 将一个bean对象 配置到容器中 
		
			步骤1. 将工厂的实例(对象) , 配置到容器中
	
	
	<bean id="personObjectFactory" class="cn.xdl.bean.PersonObjectFactory"></bean>
	
		通过实例工厂, 将一个bean对象 配置到容器中 
		
			步骤2. 通过第一步添加的工厂实例, 向容器中添加具体的对象
				1.	factory-bean属性: 描述通过哪个工厂的实例来创建这个对象,应传入容器中存在的工厂实例的id
				2.	factory-method属性:指定工厂实例中的工厂方法名称
				3.	id属性: (不允许使用特殊字符)配置到容器中的对象的key , 我们在代码中获取到容器后 , 可以通过key获取这个创建的对象
	
	<bean factory-bean="personObjectFactory" factory-method="getPerson" id="person"></bean> -->
	
</beans>
